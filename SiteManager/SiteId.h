//============================================================================
/// \file    SiteId.h
/// \authors Florian Bauer <florian.bauer.dev@gmail.com>
/// \date    2021-01-10
/// \brief   Definition of the SiteId Data Type for the SiteManager Feature
/// \note    Code generated by sila2codegenerator 0.3.3-dev
//============================================================================
#ifndef SITE_ID_H
#define SITE_ID_H

#include "SiteManager.grpc.pb.h"

/**
 * @brief Convenience type for the DataType_SiteId Protobuf Message
 */
struct SiteId {
    SiLA2::CString SiteIndex;

    [[nodiscard]] sila2::de::fau::robot::sitemanager::v1::DataType_SiteId::SiteId_Struct*
    makeNestedMessage() const {
        using sila2::de::fau::robot::sitemanager::v1::DataType_SiteId;
        auto Result =
                new DataType_SiteId::SiteId_Struct{};
        Result->set_allocated_siteindex(
                SiteIndex.toProtoMessagePtr());
        return Result;
    }

    /**
     * @brief Convert this convenience type to a SiLAFramework type, i.e. the
     * Protobuf Message
     *
     * @return The SiLAFramework equivalent of this type as a Protobuf Message
     */
    [[nodiscard]] sila2::de::fau::robot::sitemanager::v1::DataType_SiteId
    toProtoMessage() const {
        using sila2::de::fau::robot::sitemanager::v1::DataType_SiteId;
        auto Result = DataType_SiteId{};
        Result.set_allocated_siteid(makeNestedMessage());
        return Result;
    }

    /**
     * @brief Convert this convenience type to a SiLAFramework type, i.e. the
     * Protobuf Message
     *
     * @return The SiLAFramework equivalent of this type as a Protobuf Message
     * pointer
     */
    [[nodiscard]] sila2::de::fau::robot::sitemanager::v1::DataType_SiteId*
    toProtoMessagePtr() const {
        using sila2::de::fau::robot::sitemanager::v1::DataType_SiteId;
        auto Result = new DataType_SiteId{};
        Result->set_allocated_siteid(makeNestedMessage());
        return Result;
    }
};

#endif  // SITE_ID_H
