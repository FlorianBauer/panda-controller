// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2021-02-06 22:46:37
//
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.de.fau.robot.robotcontroller.v1;

// Feature: Robot Controller
//   Controller for a Panda robot arm.
service RobotController {
    // Get Current Frame
    //   Get the current joint values.
    rpc GetCurrentFrame(sila2.de.fau.robot.robotcontroller.v1.GetCurrentFrame_Parameters) returns (sila2.de.fau.robot.robotcontroller.v1.GetCurrentFrame_Responses) {}
    // Get Current Pose
    //   Get the current position and orientation of the robot hand.
    rpc GetCurrentPose(sila2.de.fau.robot.robotcontroller.v1.GetCurrentPose_Parameters) returns (sila2.de.fau.robot.robotcontroller.v1.GetCurrentPose_Responses) {}
    // Move To Pose
    //   Move to a given position and with a given orientation.
    rpc MoveToPose(sila2.de.fau.robot.robotcontroller.v1.MoveToPose_Parameters) returns (sila2.de.fau.robot.robotcontroller.v1.MoveToPose_Responses) {}
    // Move To Site
    //   Move to a given site without approaching.
    rpc MoveToSite(sila2.de.fau.robot.robotcontroller.v1.MoveToSite_Parameters) returns (sila2.de.fau.robot.robotcontroller.v1.MoveToSite_Responses) {}
    // Transport Plate
    //   Transports a plate between the two given sites.
    rpc TransportPlate(sila2.de.fau.robot.robotcontroller.v1.TransportPlate_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc TransportPlate_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc TransportPlate_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.fau.robot.robotcontroller.v1.TransportPlate_Responses) {}
    // Pick Plate
    //   Pick up a plate from a given site.
    rpc PickPlate(sila2.de.fau.robot.robotcontroller.v1.PickPlate_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc PickPlate_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc PickPlate_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.fau.robot.robotcontroller.v1.PickPlate_Responses) {}
    // Place Plate
    //   Places the currently grabbed plate on a given site.
    rpc PlacePlate(sila2.de.fau.robot.robotcontroller.v1.PlacePlate_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc PlacePlate_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc PlacePlate_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.fau.robot.robotcontroller.v1.PlacePlate_Responses) {}
    // Follow Path
    //   Follows a path of poses.
    rpc FollowPath(sila2.de.fau.robot.robotcontroller.v1.FollowPath_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc FollowPath_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc FollowPath_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.fau.robot.robotcontroller.v1.FollowPath_Responses) {}
    // Set To Frame
    //   Sets the absolute joint values.
    rpc SetToFrame(sila2.de.fau.robot.robotcontroller.v1.SetToFrame_Parameters) returns (sila2.de.fau.robot.robotcontroller.v1.SetToFrame_Responses) {}
    // Follow Frames
    //   Successively set the absolute joint values.
    rpc FollowFrames(sila2.de.fau.robot.robotcontroller.v1.FollowFrames_Parameters) returns (sila2.org.silastandard.CommandConfirmation) {}
    rpc FollowFrames_Info(sila2.org.silastandard.CommandExecutionUUID) returns (stream sila2.org.silastandard.ExecutionInfo) {}
    rpc FollowFrames_Result(sila2.org.silastandard.CommandExecutionUUID) returns (sila2.de.fau.robot.robotcontroller.v1.FollowFrames_Responses) {}
    // Set Gripper
    //   Sets the distance between the two finger to the given width. This operation can be used to open or close the gripper.
    rpc SetGripper(sila2.de.fau.robot.robotcontroller.v1.SetGripper_Parameters) returns (sila2.de.fau.robot.robotcontroller.v1.SetGripper_Responses) {}
    // Close Gripper
    //   Closes the gripper.
    rpc CloseGripper(sila2.de.fau.robot.robotcontroller.v1.CloseGripper_Parameters) returns (sila2.de.fau.robot.robotcontroller.v1.CloseGripper_Responses) {}
    
    
}

// ----------------- Data Type definitions -----------------
// Frame
//   Absolute joint values describing a frame.
message DataType_Frame {
    // Constrained type, not reflected in protocol buffers
    repeated sila2.org.silastandard.Real Frame = 1;
}
// Site ID
//   The string identifier of the Site.
message DataType_SiteId {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.String SiteId = 1;
}
// Pose
//   The pose of the end-effector. The pose itself consists of two parts: The position as vector (XYZ) and the orientation as
//   quaternion (XYZW).
message DataType_Pose {
    message Pose_Struct {
        // X
        //   The X position of the Site.
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real X = 1;
        // Y
        //   The Y position of the Site.
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real Y = 2;
        // Z
        //   The Z position defining the relative height.
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real Z = 3;
        // Orientation X
        //   The X value.
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real OriX = 4;
        // Orientation Y
        //   The Y value.
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real OriY = 5;
        // Orientation Z
        //   The Z value.
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real OriZ = 6;
        // Orientation W
        //   The W value.
        // Constrained type, not reflected in protocol buffers
        sila2.org.silastandard.Real OriW = 7;
    }
    sila2.de.fau.robot.robotcontroller.v1.DataType_Pose.Pose_Struct Pose = 1;
}

// ------ Command Parameter and Response definitions -------
message GetCurrentFrame_Parameters {
    
}

message GetCurrentFrame_Responses {
    sila2.de.fau.robot.robotcontroller.v1.DataType_Frame Frame = 1;
}

message GetCurrentPose_Parameters {
    
}

message GetCurrentPose_Responses {
    sila2.de.fau.robot.robotcontroller.v1.DataType_Pose Pose = 1;
}

message MoveToPose_Parameters {
    sila2.de.fau.robot.robotcontroller.v1.DataType_Pose Pose = 1;
}

message MoveToPose_Responses {
    
}

message MoveToSite_Parameters {
    sila2.de.fau.robot.robotcontroller.v1.DataType_SiteId SiteId = 1;
}

message MoveToSite_Responses {
    
}

message TransportPlate_Parameters {
    sila2.de.fau.robot.robotcontroller.v1.DataType_SiteId OriginSiteId = 1;
    sila2.de.fau.robot.robotcontroller.v1.DataType_SiteId DestinationSiteId = 2;
    sila2.org.silastandard.Boolean IsLiquidTransport = 3;
}

message TransportPlate_Responses {
    
}

message PickPlate_Parameters {
    sila2.de.fau.robot.robotcontroller.v1.DataType_SiteId SiteId = 1;
}

message PickPlate_Responses {
    
}

message PlacePlate_Parameters {
    sila2.de.fau.robot.robotcontroller.v1.DataType_SiteId SiteId = 1;
}

message PlacePlate_Responses {
    
}

message FollowPath_Parameters {
    repeated sila2.de.fau.robot.robotcontroller.v1.DataType_Pose PoseList = 1;
}

message FollowPath_Responses {
    
}

message SetToFrame_Parameters {
    sila2.de.fau.robot.robotcontroller.v1.DataType_Frame Frame = 1;
}

message SetToFrame_Responses {
    
}

message FollowFrames_Parameters {
    // Constrained type, not reflected in protocol buffers
    repeated sila2.de.fau.robot.robotcontroller.v1.DataType_Frame FrameList = 1;
}

message FollowFrames_Responses {
    
}

message SetGripper_Parameters {
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Real Width = 1;
}

message SetGripper_Responses {
    
}

message CloseGripper_Parameters {
    
}

message CloseGripper_Responses {
    
}


// ----------------- Metadata Definitions ------------------
